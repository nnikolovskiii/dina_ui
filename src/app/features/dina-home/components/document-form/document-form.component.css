.container {
  background-color: #34373b;
  max-width: 600px;
  font-family: Arial, sans-serif;
  padding-bottom: 4px;
  color: white;
}


.input-group {
  margin-bottom: 1.5rem;
  flex-direction: column;
}

.input-label {
  display: block;
  margin-bottom: 0.5rem;
  color: white;
  font-size: 0.9rem;
}

.input-field {
  width: 100%;
  padding: 12px;
  border-radius: 6px;
  font-size: 1rem;
  transition: all 0.3s ease;
  box-sizing: border-box;
  background-color: #43454a;
}

.input-field:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(255,255, 255, 0.6);
}

.input-field:hover {
  border-color: #999;
}

@media (max-width: 480px) {
  .container {
    padding: 15px;
  }

  .input-field {
    padding: 10px;
    font-size: 0.9rem;
  }
}

.flex-div{
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  flex-direction: row;
}

.button {
  position: relative;
  text-decoration: none;
  color: #fff;
  background: linear-gradient(45deg, #0ce39a, #69007f, #fc0987);
  padding: 10px 21px;
  border-radius: 10px;
  font-size: 1em;
  cursor: pointer;
  z-index: 1;
}

.button span {
  position: relative;
  z-index: 1;
}

.button::before {
  content: "";
  position: absolute;
  inset: 1px;
  background: #34373b;
  border-radius: 9px;
  transition: 0.5s;
}

.button:hover::before {
  opacity: 0.7;
}

.button::after {
  content: "";
  position: absolute;
  inset: 0px;
  background: linear-gradient(45deg, #0ce39a, #69007f, #fc0987);
  border-radius: 9px;
  transition: 0.5s;
  opacity: 0;
  filter: blur(20px);
}

.button:hover:after {
  opacity: 1;
}

/* Add these additional styles to your CSS */
.checkbox-container {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.checkbox-container input[type="checkbox"] {
  width: auto;
  transform: scale(1.2);
}

select.input-field {
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='white'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 1em;
  color: rgba(255, 255, 255, 0.6);
}

textarea.input-field {
  min-height: 100px;
  resize: vertical;
  color: #34373b;
}

.checkbox-group {
  display: flex;
  flex-direction: row;
  gap: 8px;
  color: white;
  align-items: center;
  /*justify-content: center;*/
}

.checkbox-option {
  display: flex;
  align-items: center;
  gap: 8px;
}


/* From Uiverse.io by SelfMadeSystem */
.container-checkboxes {
  cursor: pointer;
  margin-bottom: 0px;
}

.container-checkboxes input {
  display: none;
}

.container-checkboxes svg {
  overflow: visible;
}

.path {
  fill: none;
  stroke: white;
  stroke-width: 6;
  stroke-linecap: round;
  stroke-linejoin: round;
  transition: stroke-dasharray 0.5s ease, stroke-dashoffset 0.5s ease;
  stroke-dasharray: 241 9999999;
  stroke-dashoffset: 0;
}

.container-checkboxes input:checked ~ svg .path {
  stroke-dasharray: 70.5096664428711 9999999;
  stroke-dashoffset: -262.2723388671875;
}

.checkboxes{
  margin-left: 20px;
}

/* From Uiverse.io by namecho */
.cool-switch {
  --button-width: 3.2em;
  --button-height: 1.8em;
  --toggle-diameter: 1.2em;
  --button-toggle-offset: calc((var(--button-height) - var(--toggle-diameter)) / 2);
  --toggle-shadow-offset: 10px;
  --toggle-wider: 3em;
  --color-grey:#43454a;
  --color-green: #4296f4;
}

.cool-slider {
  display: inline-block;
  width: var(--button-width);
  height: var(--button-height);
  background-color: var(--color-grey);
  border-radius: calc(var(--button-height) / 2);
  position: relative;
  transition: 0.3s all ease-in-out;
}

.cool-slider::after {
  content: "";
  display: inline-block;
  width: var(--toggle-diameter);
  height: var(--toggle-diameter);
  background-color: #fff;
  border-radius: calc(var(--toggle-diameter) / 2);
  position: absolute;
  top: var(--button-toggle-offset);
  transform: translateX(var(--button-toggle-offset));
  box-shadow: var(--toggle-shadow-offset) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
  transition: 0.3s all ease-in-out;
}

.cool-switch input[type="checkbox"]:checked + .cool-slider {
  background: linear-gradient(45deg, #0ce39a, #69007f, #fc0987);
}

.cool-switch input[type="checkbox"]:checked + .cool-slider::after {
  transform: translateX(calc(var(--button-width) - var(--toggle-diameter) - var(--button-toggle-offset)));
  box-shadow: calc(var(--toggle-shadow-offset) * -1) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
}

.cool-switch input[type="checkbox"] {
  display: none;
}

.cool-switch input[type="checkbox"]:active + .cool-slider::after {
  width: var(--toggle-wider);
}

.cool-switch input[type="checkbox"]:checked:active + .cool-slider::after {
  transform: translateX(calc(var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)));
}
